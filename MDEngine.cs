using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;
using System.Web;

public class MDEngine
{
    public static string GetMD5(string filename)
    {
        string errorMsg = "error";

        try
        {
            using (FileStream fStream = File.OpenRead(filename))
            {
                return GetHash<MD5>(fStream);
            }

        }
        catch { }

        return errorMsg;

    }

    public static string CheckMalc0de(string filename)
    {
        string md5 = GetMD5(filename);
        string result = "Infected";
        try
        {
            using (WebClient client = new WebClient()) 
            {
                client.Headers.Add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36");
                string htmlCode = client.DownloadString("http://malc0de.com/database/index.php?search=" + md5);

                if (htmlCode.Contains("yielded no results") == true)
                {
                    result = "Clean";
                }

            }
        }
        catch
        {
            result = "Error";
        }

        return result;
    }
    public static string CheckVXVault(string filename)
    {
        string md5 = GetMD5(filename);
        string result = "Clean";
        try
        {
            using (WebClient client = new WebClient())
            {
                client.Headers.Add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36");
                string htmlCode = client.DownloadString("http://vxvault.net/ViriList.php?MD5=" + md5);

                if (htmlCode.Contains("ViriFiche.php") == true)
                {
                    result = "Infected";
                }

            }
        }
        catch
        {
            result = "Error";
        }

        return result;
    }
    public static string GetHash<T>(Stream stream) where T : HashAlgorithm
    {
        StringBuilder sb = new StringBuilder();

        MethodInfo create = typeof(T).GetMethod("Create", new Type[] { });
        using (T crypt = (T)create.Invoke(null, null))
        {
            byte[] hashBytes = crypt.ComputeHash(stream);
            foreach (byte bt in hashBytes)
            {
                sb.Append(bt.ToString("x2"));
            }
        }
        return sb.ToString();
    }

}