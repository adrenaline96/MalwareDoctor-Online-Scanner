using MalwareDoctor_Online_Scanner;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Home : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        lblBrowse.Text = "Browse a file to scan it.";
        btnScan.Text = "Scan";
        lblVT.Visible = false;
        lblMal.Visible = false;
        lblVX.Visible = false;
        lblResults.Visible = false;
        btnDetails.Visible = false;
        lbtnNewScan.Visible = false;
        
    }

    protected void Button1_Click(object sender, EventArgs e)
    {
        
            if (FileUpload1.HasFile)
            {
                try
                {
                    string filename = Path.GetFileName(FileUpload1.FileName);

                    FileUpload1.SaveAs(Server.MapPath("~/Uploads/") + filename);

                   FileManager mgr = new FileManager(Server.MapPath("~/Uploads/") + filename);

                //start vt


                if (mgr.VT[0].Contains("Unknown"))
                {

                    lblVT.Text = "Unknown.";

                }
                else if (mgr.VT[0].Contains("Error"))
                {
                    lblVT.Text = "Error. Most likely bad API key.";
                }
                else
                {

                    int engineCount = 0;
                    int detectionCount = 0;


                    MakeTableHeaderVisible();
                    foreach (string line in mgr.VT)
                    {
                        if (String.IsNullOrEmpty(line) == false)
                        {
                            engineCount = engineCount + 1;
                        }
                        if (line.Contains("True") == true)
                        {
                            detectionCount = detectionCount + 1;
                        }

                        string[] detectionInfo;
                        detectionInfo = line.Split(new char[] { '*' });

                        
                        var cell1 = new TableCell();
                        var cell2 = new TableCell();
                        var cell3 = new TableCell();
                        var row = new TableRow();
                        cell1.Text = detectionInfo[0];

                        if (detectionInfo[1] == "True")
                        {
                            cell2.Text = "Infected";
                        }
                        else if(detectionInfo[1] == "False")
                        {
                            cell2.Text = "Clean";
                        }
  
                        cell3.Text = detectionInfo[2];
                        row.Cells.Add(cell1);
                        row.Cells.Add(cell2);
                        row.Cells.Add(cell3);
                       
                        Table1.Rows.Add(row);
                    }


                    lblVT.Text = lblVT.Text + detectionCount.ToString() + "/" + engineCount.ToString();

                }
                //end vt

                
                lblMal.Text = lblMal.Text+mgr.Malc0de;
              
                lblVX.Text = lblVX.Text + mgr.VXVault;

                lblResults.Text = "Results for " + filename + " (MD5:" +mgr.MD5+")";


                UnhideControls();
            }
                catch (Exception ex)
                {
                lblResults.Text = ex.Message;
                   
                }
            }
        
    }

    public void UnhideControls()
    {
        lblVT.Visible = true;
        lblMal.Visible = true;
        lblVX.Visible = true;
        lblResults.Visible = true;
        btnDetails.Visible = true;
        lbtnNewScan.Visible = true;
        btnScan.Visible = false;
        lblBrowse.Visible = false;
        FileUpload1.Visible = false;
    }
    protected void Button2_Click(object sender, EventArgs e)
    {
        
            Table1.Visible = true;
        
        
    }
    

    public void MakeTableHeaderVisible()
    {
        TableHeaderCell headerTableCell1 = new TableHeaderCell();
        TableHeaderCell headerTableCell2 = new TableHeaderCell();
        TableHeaderCell headerTableCell3 = new TableHeaderCell();

        headerTableCell1.Text = "Engine";
        headerTableCell2.Text = "Verdict";
        headerTableCell3.Text = "Detection";

        TableHeaderRow headerRow = new TableHeaderRow();
        headerRow.Cells.Add(headerTableCell1);
        headerRow.Cells.Add(headerTableCell2);
        headerRow.Cells.Add(headerTableCell3);
        Table1.Rows.Add(headerRow);
    }
}